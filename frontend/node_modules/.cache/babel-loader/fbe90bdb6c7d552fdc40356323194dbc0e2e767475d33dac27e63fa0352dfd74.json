{"ast":null,"code":"var _jsxFileName = \"/app/src/components/NewContact.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewContact(props) {\n  _s();\n  const {\n    contacts,\n    setContacts\n  } = props;\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState(''); // State for address\n\n  async function createContact(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost/api/contacts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        address // Include address in the request body\n      })\n    });\n\n    const data = await response.json();\n    if (data.id) {\n      setContacts([...contacts, data]);\n    }\n\n    // Clear the inputs after submission\n    setName('');\n    setAddress('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"new-contact\",\n    onSubmit: createContact,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      onChange: e => setName(e.target.value),\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Address\" // Placeholder for the address field\n      ,\n      onChange: e => setAddress(e.target.value) // Update address state\n      ,\n      value: address // Value for the address field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button green\",\n      type: \"submit\",\n      children: \"Create Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(NewContact, \"78EYDZKeXjuWVjlznY4i/nZndS8=\");\n_c = NewContact;\nexport default NewContact;\nvar _c;\n$RefreshReg$(_c, \"NewContact\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NewContact","props","_s","contacts","setContacts","name","setName","address","setAddress","createContact","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","id","className","onSubmit","children","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/NewContact.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction NewContact(props) {\n    const { contacts, setContacts } = props;\n    const [name, setName] = useState('');\n    const [address, setAddress] = useState(''); // State for address\n\n    async function createContact(e) {\n        e.preventDefault();\n\n        const response = await fetch('http://localhost/api/contacts', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name,\n                address // Include address in the request body\n            })\n        });\n\n        const data = await response.json();\n\n        if (data.id) {\n            setContacts([...contacts, data]);\n        }\n\n        // Clear the inputs after submission\n        setName('');\n        setAddress('');\n    }\n\n    return (\n        <form className='new-contact' onSubmit={createContact}>\n            <input \n                type='text' \n                placeholder='Name' \n                onChange={(e) => setName(e.target.value)} \n                value={name} \n            />\n            <input \n                type='text' \n                placeholder='Address' // Placeholder for the address field\n                onChange={(e) => setAddress(e.target.value)} // Update address state\n                value={address} // Value for the address field\n            />\n            <button className='button green' type='submit'>Create Contact</button>\n        </form>\n    );\n}\n\nexport default NewContact;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGH,KAAK;EACvC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,eAAeY,aAAaA,CAACC,CAAC,EAAE;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBb,IAAI;QACJE,OAAO,CAAC;MACZ,CAAC;IACL,CAAC,CAAC;;IAEF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAID,IAAI,CAACE,EAAE,EAAE;MACTjB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEgB,IAAI,CAAC,CAAC;IACpC;;IAEA;IACAb,OAAO,CAAC,EAAE,CAAC;IACXE,UAAU,CAAC,EAAE,CAAC;EAClB;EAEA,oBACIT,OAAA;IAAMuB,SAAS,EAAC,aAAa;IAACC,QAAQ,EAAEd,aAAc;IAAAe,QAAA,gBAClDzB,OAAA;MACI0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,QAAQ,EAAGjB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACkB,MAAM,CAACC,KAAK,CAAE;MACzCA,KAAK,EAAExB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACFlC,OAAA;MACI0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS,CAAC;MAAA;MACtBC,QAAQ,EAAGjB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACkB,MAAM,CAACC,KAAK,CAAE,CAAC;MAAA;MAC7CA,KAAK,EAAEtB,OAAQ,CAAC;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACFlC,OAAA;MAAQuB,SAAS,EAAC,cAAc;MAACG,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEf;AAAC/B,EAAA,CA/CQF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAiDnB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}